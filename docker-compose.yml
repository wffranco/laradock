version: '2'

services:

### GULP Pre Install ############################

    gulp-preinstall:
        build:
            context: ..
            dockerfile: ./${DOCKER_PATH:-laradock}/gulp-console/Dockerfile.pre
        working_dir: /home/tms
        volumes:
            - /home/tms
            - ../package.json:/home/tms/package.json
            - ../node_modules:/home/tms/node_modules
        command: "npm install"

### GULP Container ############################

    gulp-console:
        build:
            context: ..
            dockerfile: ./${DOCKER_PATH:-laradock}/gulp-console/Dockerfile
        command: "su - tms -s /bin/bash -c 'gulp client && gulp super && gulp school'"
        # command: "su - tms -s /bin/bash -c 'gulp super && gulp school' -c 'gulp watch_dev'"
        # command: "su - tms -s /bin/bash -c 'gulp watch_dev'"
        # command: "tail -f /var/log/dmesg"
        volumes:
            - /home/tms/node_modules
            - ../client:/home/tms/client
            - ../school:/home/tms/school
            - ../super:/home/tms/super
            - ../config:/home/tms/config
            - ../gulpfile.js:/home/tms/gulpfile.js
            - ./gulp-console/docker.json:/home/tms/config/docker.json
        volumes_from:
            - volumes_source

### Workspace Utilities Container ###########################

    workspace:
        build:
            context: ./workspace
            args:
                - INSTALL_XDEBUG=true
                - INSTALL_MONGO=false
                - INSTALL_NODE=false
                - INSTALL_YARN=false
                - INSTALL_DRUSH=false
                - INSTALL_AEROSPIKE_EXTENSION=false
                - COMPOSER_GLOBAL_INSTALL=false
                - INSTALL_WORKSPACE_SSH=false
                - INSTALL_REDIS_EXTENSION=true
                - INSTALL_CRON=false
                - PUID=1000
                - PGID=1000
                - NODE_VERSION=stable
                - TZ=UTC
        command: "composer --no-dev --no-interaction --no-progress --no-scripts --prefer-dist --optimize-autoloader install"
        volumes_from:
            - volumes_source
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "newtms.com:192.168.65.2"
        ports:
           - "2222:22"
        tty: true
        links:
            - gulp-console

### PHP-FPM Container #######################################

    php-fpm:
        image: php-fpm
        build:
            context: ./php-fpm
            args:
                - INSTALL_XDEBUG=true
                - INSTALL_MONGO=false
                - INSTALL_ZIP_ARCHIVE=false
                - INSTALL_MEMCACHED=false
                - INSTALL_OPCACHE=false
                - INSTALL_AEROSPIKE_EXTENSION=false
                - INSTALL_REDIS_EXTENSION=true
            dockerfile: Dockerfile-56
        volumes_from:
            - volumes_source
        expose:
            - "9000"
        links:
            - workspace
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "newtms.com:192.168.65.2"
        environment:
            # IMPORTANT: Set the Remote Interpreter entry matching name to `laravel`
            - PHP_IDE_CONFIG=serverName=laravel


    elk:
        build: ./elk
        container_name: elk
        ports:
          - "5601:5601"
          - "9200:9200"
          - "5044:5044"
        volumes_from:
            - volumes_data
        volumes:
          - ./elk/02-redis-input.conf:/etc/logstash/conf.d/02-redis-input.conf
          - ./elk/30-output.conf:/etc/logstash/conf.d/30-output.conf

    nginx-elk:
        build: ./nginx-elk
        container_name: nginx-elk
        ports:
          - "8088:8088"
        links:
            - elk

### Nginx Server Container ##################################

    nginx:
        build:
            context: ./nginx
            args:
                - PHP_UPSTREAM=php-fpm
        volumes_from:
            - volumes_source
        volumes:
            - ./logs/nginx/:/var/log/nginx
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm

### Apache Server Container ##################################

    apache2:
        build:
            context: ./apache2
            args:
                - PHP_SOCKET=php-fpm:9000
        volumes_from:
            - volumes_source
        volumes:
            - ./logs/apache2:/var/log/apache2
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm

### MySQL Container #########################################

    mysql:
        build: ./mysql
        volumes_from:
            - volumes_data
        ports:
            - "3306:3306"
        expose:
            - 3306
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

### MongoDB Container #######################################

    mongo:
        build: ./mongo
        ports:
            - "27017:27017"
        volumes_from:
            - volumes_data

### Redis Container #########################################

    redis:
        build: ./redis
        volumes_from:
            - volumes_data
        ports:
            - "6379:6379"


### ElasticSearch Container ##################################

    elasticsearch:
        build: ./elasticsearch
        volumes_from:
            - volumes_data
        ports:
            - "9200:9200"
            - "9300:9300"
        links:
            - php-fpm


### Laravel Application Code Container ######################

    volumes_source:
        image: tianon/true
        volumes:
            - ../server:/var/www/tms
            - ./workspace/composer.lock:/var/www/tms/composer.lock
            - ./workspace/dotenv:/var/www/tms/.env

### Databases Data Container ################################

    volumes_data:
        image: tianon/true
        volumes:
            - ./data/mysql:/var/lib/mysql
            - ./data/postgres:/var/lib/postgresql/data
            - ./data/memcached:/var/lib/memcached
            - ./data/redis:/data
            - ./data/neo4j:/var/lib/neo4j/data
            - ./data/mongo:/data/db
            - ./data/aerospike:/opt/aerospike/data
            - ./data/sessions:/sessions
            - ./data/caddy:/root/.caddy
            - ./data/elasticsearch/data:/usr/share/elasticsearch/data
            - ./data/elasticsearch/plugins:/usr/share/elasticsearch/plugins

### Add more Containers below ###############################
